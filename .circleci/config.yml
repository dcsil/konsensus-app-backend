orbs: # declare what orbs we are going to use
  node: circleci/node@5.0.0 # the node orb provides common node-related configuration

version: 2.1 # using 2.1 provides access to orbs and other features

jobs:
  setup:
    parameters:
        mysql_root_password:
          type: string
          default: abc
        mysql_database:
          type: string
          default: konsensus-app-backend
    docker:
      - image: 'cimg/base:stable'
      - image: cimg/mysql:8.0
        environment:
          MYSQL_ROOT_PASSWORD: << parameters.mysql_root_password >>
          MYSQL_DATABASE: << parameters.mysql_database >>

    steps:
      - checkout
      - node/install:
          install-yarn: false
          node-version: '16.14'
      - run: node --version
      - run:
          name: Wait for Database Connection
          # preinstalled in circleci/* docker image
          command: dockerize -wait tcp://localhost:3306 -timeout 1m
      - run: npm install
      - run: npm test
      - run:
          name: Run coverage
          command: npm run cover
          when: always
      - run:
          name: Setup Code Climate test-reporter
          command: |
              # download test reporter as a static binary
              curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
              chmod +x ./cc-test-reporter
              ./cc-test-reporter before-build
          when: always
      - run:
          name: Send coverage report to Code Climate
          command:
              # nyc report requires that nyc has already been run,
              # which creates the .nyc_output folder containing necessary data
              ./cc-test-reporter after-build -t lcov
          when: always
      # Upload results
      - store_artifacts: # upload test coverage as artifact
          path: ./coverage/lcov.info
          prefix: tests
workflows:
  test_backend:
    jobs:
      - setup
      # - node/test:
      #     test-results-for: jest
      #     requires: [setup]
